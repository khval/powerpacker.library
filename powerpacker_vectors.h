
/* This file was generated by idltool 53.24. Do not edit */

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif
#ifndef LIBRARIES_POWERPACKER_H
#include <libraries/powerpacker.h>
#endif

/* forward declaration */
struct PowerPackerIFace;

extern ULONG                VARARGS68K _powerpacker_Obtain(struct PowerPackerIFace *);
extern ULONG                VARARGS68K _powerpacker_Release(struct PowerPackerIFace *);
extern ULONG                VARARGS68K _powerpacker_ppLoadData__legacy__(struct PowerPackerIFace *, char * filename, ULONG col, ULONG memtype, UBYTE ** bufferptr, ULONG * lenptr, BOOL (*funcptr)());
extern void                 VARARGS68K _powerpacker_ppDecrunchBuffer(struct PowerPackerIFace *, UBYTE * endcrun, UBYTE * decrbuff, ULONG * effptr, ULONG col);
extern ULONG                VARARGS68K _powerpacker_ppCalcChecksum(struct PowerPackerIFace *, char * string);
extern ULONG                VARARGS68K _powerpacker_ppCalcPasskey(struct PowerPackerIFace *, char * string);
extern void                 VARARGS68K _powerpacker_ppDecrypt(struct PowerPackerIFace *, UBYTE * buffer, ULONG len, ULONG key);
extern BOOL                 VARARGS68K _powerpacker_ppGetPassword(struct PowerPackerIFace *, struct Screen * screen, ULONG * buffer, ULONG maxchars, ULONG checksum);
extern APTR                 VARARGS68K _powerpacker_ppAllocCrunchInfo(struct PowerPackerIFace *, ULONG eff, ULONG speedup, BOOL (*func)(), APTR userdata);
extern void                 VARARGS68K _powerpacker_ppFreeCrunchInfo(struct PowerPackerIFace *, APTR crunchinfo);
extern ULONG                VARARGS68K _powerpacker_ppCrunchBuffer(struct PowerPackerIFace *, APTR crunchinfo, UBYTE * buffer, ULONG length);
extern BOOL                 VARARGS68K _powerpacker_ppWriteDataHeader(struct PowerPackerIFace *, BPTR lock, ULONG eff, BOOL crypt, ULONG checksum);
extern BOOL                 VARARGS68K _powerpacker_ppEnterPassword(struct PowerPackerIFace *, struct Screen * screen, UBYTE * buffer);
extern const char *         VARARGS68K _powerpacker_ppErrorMessage(struct PowerPackerIFace *, LONG error);
extern ULONG                VARARGS68K _powerpacker_ppCrunchBufferDest(struct PowerPackerIFace *, UBYTE * crunchinfo, UBYTE * buffer, UBYTE * dest, ULONG len);
extern ULONG                VARARGS68K _powerpacker_ppLoadData2(struct PowerPackerIFace *, char * filename, UBYTE ** output_buffer, APTR (*alloc_fn)(ULONG), BOOL (*password_fn)(UBYTE *, ULONG));
